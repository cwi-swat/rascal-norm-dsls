Fact person           Identified by String
Placeholder parent    For person
Placeholder child     For person

Fact natural-parent   Identified by parent * child
Fact adoptive-parent  Identified by parent * child
Fact legal-parent     Identified by parent * child
  Holds when Holds(adoptive-parent(parent,child)) 
          || Holds(natural-parent(parent,child))
Invariant parentship : Not(Exists person : legal-parent(person,person))
  
Fact in-school Identified by child
Fact is-parent Identified by parent 
  Holds when (Exists child: Holds(legal-parent(parent,child)))

Event join-school 
  Related to child
  Creates in-school()
  Holds when Not(in-school())
          && Not(is-parent())

Invariant parents-not-in-school : (Forall person1:
  Not(Exists person2: Holds(legal-parent(person1, person2))) 
  When Holds(in-school(person1))) 
          
Act ask-for-help
  Actor      child
  Recipient  parent
  Creates    help-with-homework(parent,child)
  Holds when Holds(legal-parent(parent,child))
          && Not(Holds(homework-due(child))) // to satisfy safety property 1
          && Not(Holds(help-with-homework(parent,child)))
  
Fact homework-due Identified by child

Duty help-with-homework
  Holder        parent
  Claimant      child
  Violated when Holds(homework-due(child))
  
Act help 
  Actor      parent 
  Recipient  child
  Terminates help-with-homework(parent,child)
  Holds when Holds(legal-parent(parent,child))
  
Event homework-deadline
  Creates (Foreach child : homework-due(child) When Holds(in-school(child)))
  
Event new-homework
  Terminates (Foreach homework-due: homework-due)

// finitize domain
Fact person Identified by Alice, Bob, Chloe, David

// finitize time horizon
// steps: 10

// safety property 1
// "a legal-parent can not be asked to help with homework when homework is already due"

// liveness property 1
// "when a legal-parent receives the duty to help, they are eventually able to help (and to remove the duty)"